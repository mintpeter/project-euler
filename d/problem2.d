/*
   Each new term in the Fibonacci sequence is generated by adding the previous
   two terms. By starting with 1 and 2, the first 10 terms will be:

   1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

   By considering the terms in the Fibonacci sequence whose values do not exceed
   four million, find the sum of the even-valued terms.
 */

import std.stdio;
import std.algorithm;
import std.functional;

void main() {
    int lastfib = 1, total = 0;
    for (int i = 1; lastfib < 4 * 10^^6; i++) {
        lastfib = fib(i);
        if (lastfib % 2 == 0)
            total += lastfib;
        writeln(lastfib);
    }

    writeln(total);
}

/* Get the nth Fibonacci number. */
int fib(int n) {
    if (n < 2)
        return 1;
    return memoize!fib(n-2) + memoize!fib(n-1);
}
